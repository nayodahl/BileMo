openapi: 3.0.0
info:
  title: 'BileMo API'
  description: 'This is the documention for Bilemo API.'
  version: 1.0.0
paths:
  '/api/customers/{customerId}':
    get:
      tags:
        - customer
      summary: 'Find customer by Id'
      description: 'Returns a single customer detail, you need to be an authenticated reseller'
      operationId: 'App\Controller\CustomerController::showCustomer'
      parameters:
        -
          name: customerId
          in: path
          description: 'ID of customer to return'
          required: true
          schema:
            type: integer
            format: int
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: 'customer not found'
        '400':
          description: 'Invalid ID supplier'
    delete:
      tags:
        - customer
      summary: 'Deletes a customer'
      description: 'Delete a customer linked to your account, you need to be an authenticated reseller'
      operationId: 'App\Controller\CustomerController::DeleteCustomer'
      parameters:
        -
          name: customerId
          in: path
          description: 'Customer Id to delete'
          required: true
          schema:
            type: integer
            format: int
      responses:
        '204':
          description: 'Delete a customer'
        '404':
          description: 'Customer not found'
  /api/customers:
    get:
      tags:
        - customer
      summary: 'Find all your customers'
      description: 'Returns a paginated list of all your customers, you need to be an authenticated reseller. The list of results is paginated, so if you need next page, add the page number as parameter in the query. Exemple : /api/customers?page=2 '
      operationId: 'App\Controller\CustomerController::showCustomers'
      responses:
        '200':
          description: 'successful operation'
        '404':
          description: 'there is no customer for the moment'
    post:
      tags:
        - customer
      summary: 'Creates a new customer'
      description: 'Creates a new customer linked to your account, you need to be an authenticated reseller'
      operationId: 'App\Controller\CustomerController::CreateCustomer'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                firstname:
                  description: 'enter the firstname of the customer'
                  type: string
                lastname:
                  description: 'enter the lastname of the customer'
                  type: string
                email:
                  description: 'enter the email of the customer'
                  type: string
              type: object
              example:
                firstname: Emily
                lastname: Cooper
                email: emily.cooper@mymail.com
      responses:
        '201':
          description: 'customer created'
        '400':
          description: 'Invalid input'
  '/api/phones/{phoneId}':
    get:
      tags:
        - phone
      summary: 'Find phone by Id'
      description: 'Returns a single phone detail, you need to be an authenticated reseller'
      operationId: 'App\Controller\PhoneController::showPhone'
      parameters:
        -
          name: phoneId
          in: path
          description: 'Id of phone to return'
          required: true
          schema:
            type: integer
            format: int
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phone'
        '404':
          description: 'Phone not found'
        '400':
          description: 'Invalid ID supplier'
  /api/phones:
    get:
      tags:
        - phone
      summary: 'Find all phones'
      description: 'Returns a paginated list of all phones, you need to be an authenticated reseller. The list of results is paginated, so if you need next page, add the page number as parameter in the query. Exemple : /api/phones?page=2 '
      operationId: 'App\Controller\PhoneController::showPhones'
      responses:
        '200':
          description: 'successful operation'
        '404':
          description: 'there is no phone for the moment'
  '/api/resellers/{resellerId}':
    get:
      tags:
        - reseller
      summary: 'Find reseller by ID'
      description: 'Returns a single reseller'
      operationId: 'App\Controller\ResellerController::showReseller'
      parameters:
        -
          name: resellerId
          in: path
          description: 'ID of reseller to return'
          required: true
          schema:
            type: integer
            format: int
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reseller'
        '404':
          description: 'Reseller not found'
        '400':
          description: 'Invalid ID supplier'
  /api/resellers:
    get:
      tags:
        - reseller
      summary: 'Find all resellers'
      description: 'Returns a paginated list of all resellers, you need to be an authenticated admin. The list of results is paginated, so if you need next page, add the page number as parameter in the query. Exemple : /api/resellers?page=2 '
      operationId: 'App\Controller\ResellerController::showResellers'
      responses:
        '200':
          description: 'successful operation'
        '404':
          description: 'there is no reseller for the moment'
  /api/auth/signin:
    post:
      tags:
        - 'login and signin'
      summary: 'Signin to BileMo API'
      description: 'Signin to BileMo API, to create your reseller account'
      operationId: 'App\Controller\ResellerController::register'
      requestBody:
        description: 'Enter your email and the password of your choice. The password must respects following rules : minimum 8 characters, one uppercase, one lowercase, one number and one special character among #?!@$ %^&*-).'
        required: true
        content:
          application/json:
            schema:
              properties:
                email:
                  description: 'enter your email as identifier, it must not be already taken'
                  type: string
                password:
                  description: 'enter your chosen password, minimum 8 characters, one uppercase, one lowercase, one number and one special character among #?!@$ %^&*-).'
                  type: string
              type: object
              example:
                email: exemple@mymail.com
                password: mychosenpassword
      responses:
        '201':
          description: 'successful operation'
        '400':
          description: 'input is not valid'
  /api/auth/login:
    post:
      tags:
        - 'login and signin'
      summary: 'Login to BileMo API to get your authentication token (Bearer token)'
      description: 'This can only be done by a registred reseller. It will let you obtain a token to make all others requests to the API that need authentication (almost all requests).'
      requestBody:
        description: 'enter your credentials'
        required: true
        content:
          application/json:
            schema:
              properties:
                username:
                  description: 'enter the email you registred with as identifier'
                  type: string
                password:
                  description: 'enter your password'
                  type: string
              type: object
              example:
                username: exemple@mymail.com
                password: mypassword
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  token: { description: 'your precious token', type: string }
                type: object
                example:
                  token: eyJ7eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE2MDIwNTU3NjAsImV4cCI6MTYwMjA1OTM2MCwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoiZGV2QGxkbGMuY29tIn0.SI5UDCNxGewjFJt86olg4DbmHx6Hl9E1UqGHAWhEXIiDJNWlKVq4_evwIuuk-EPoZV7BfEuAXU19_VFg1sGbEDhs20pzOC3G8pwKNZb_NTJ1E_tZ2Wq5GQpGw38uJa6qbYg4LoVs8EyMKrul-GQXA__Tm7blr9CU40PRrhMU4LdNf9wSitYFQ_9PJS0KpvjRfDgEMmt41QB-uUh2rUbNXcfUzfake5zeQQq_AoWMZBas3mUYdZe5np0jQvNHyuw2rit2OEIhVnZzHtMbVg6XACmYy9hHw--gQ7sjiSpqTq5ZeXW1b8AWTLQRiYMC3gLU89lvRHZs4GZLUZ4_c-4mxVNMBSf5J0yjHGW4buzVy5lx9rEY1tW9XeuYPKXKODisPNcX3p1j8XKwgEdjBC4LkhlDERFoADCYH75F5IURaMpj-HSs2U6fNcduQlm8NHd_y_ziywjj6a8qjvnIvUqWOMgYjSeesVBTZvWvNBiOqZ1yRdjGAmDw5KSPReTKPsq6IBHQersaZ_YMXwakVaTdJi7IZ-IhjJTIHuBxtlfYQLNyJWHQTTMfoJPto4FFwtNysKvus1v9RIKACoB9KZcYm2gN9dbKFZFenCWHm-pGeLWGzpKdI-2Km-egT7WX9X27BHHhhqx7RfKa7AWO9JR3G20vpbSBfx8YeVXWofesW2I
        '400':
          description: 'invalid credentials'
components:
  schemas:
    Customer:
      title: Customer
      description: 'Customer model'
      properties:
        id:
          title: ID
          description: ID
          format: int64
        firstname:
          title: Firstname
          description: 'customer Firstname'
        lastname:
          title: Lastname
          description: 'customer Lastname'
        email:
          title: Email
          description: 'customer Email'
        reseller:
          title: Reseller
          description: 'customer parent Reseller'
      type: object
    Phone:
      title: Phone
      description: 'Phone model'
      properties:
        id:
          title: ID
          description: ID
          format: int64
        brand:
          title: Brand
          description: 'phone Brand'
        model:
          title: Model
          description: 'phone Model'
        description:
          title: Description
          description: 'phone Description'
        price:
          title: Price
          description: 'phone Price'
          format: float
        internalReference:
          title: 'Internal Reference'
          description: 'phone Internal Reference'
      type: object
    Reseller:
      title: Reseller
      description: 'Reseller model'
      properties:
        email:
          title: Email
          description: 'reseller Email'
        password:
          title: Password
          description: 'reseller password'
          type: string
      type: object
